/*
* Copyright 2011 PRODYNA AG
*
* Licensed under the Eclipse Public License (EPL), Version 1.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.opensource.org/licenses/eclipse-1.0.php or
* http://nabuccosource.org/License.html
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package org.nabucco.framework.base.facade.datatype.extension.schema.setup; 

import org.nabucco.framework.base.facade.datatype.extension.NabuccoExtensionComposite;
import org.nabucco.framework.base.facade.datatype.extension.property.StringProperty;
import org.nabucco.framework.base.facade.datatype.extension.schema.setup.LabelExtension;
import org.nabucco.framework.base.facade.datatype.extension.schema.setup.UserVariableValueExtension;

@Author         Frank Ratschinski
@Company        PRODYNA AG
@Date           2011-04-08
@Version        1.0
@Description    Schema definition for a user variable.
public Datatype UserVariableExtension extends NabuccoExtensionComposite {

	@Description	The identifier of the variable.
	private Datatype StringProperty[1] id;
	
	@Description	The group path of the variable
	private Datatype StringProperty[1] path;
	
	@Description	The type of the variable value
	private Datatype StringProperty[1] type;
	
	@Description	The default value, used if no value is defined for a specific user.
	private Datatype StringProperty[1] defaultValue;
	
	@Description	The associated editor for editing the value.
	private Datatype StringProperty[1] editor;
	
	@Description	The list of possible values.
	private Datatype UserVariableValueExtension[0..*] valueList;
	
	@OrderStrategy	MAPPED
	@Description	Map of labels, the language will be used as key.
	private Datatype LabelExtension[0..*] labelMap;
}
