/*
 * Copyright 2011 PRODYNA AG
 *
 * Licensed under the Eclipse Public License (EPL), Version 1.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.opensource.org/licenses/eclipse-1.0.php or
 * http://nabuccosource.org/License.html
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.nabucco.framework.base.facade.message.workflow;

import org.nabucco.framework.base.facade.datatype.Identifier;
import org.nabucco.framework.base.facade.datatype.Name;
import org.nabucco.framework.base.facade.datatype.workflow.context.Context;
import org.nabucco.framework.base.facade.datatype.workflow.instance.Instance;
import org.nabucco.framework.base.facade.datatype.workflow.state.StateConstraint;
import org.nabucco.framework.base.facade.datatype.workflow.transition.TransitionParameter;


@Author			Nicolas Moser
@Company		PRODYNA AG
@Date			2011-03-18
@Version		1.0
@Description	Result message after a workflow transition.
public Message WorkflowResultRs {

	@Description	The name of the processed workflow.
	private Basetype Name[1] workflowName;

	@Description	The instance id of the processed workflow.
	private Basetype Identifier[1] instanceId;
	
	@Description	The workflow instance of the processed workflow.
	private Datatype Instance[1] instance;

	@Description	Name of the current state.
	private Basetype Name[1] stateName;

	@Description	The transitions available for the new state.
	private Datatype TransitionParameter[0..*] nextTransitions;

	@Description	Context for the workflow transition.
	private Datatype Context[0..1] context;

	@Description	Constraints for the resulting datatype.
	private Datatype StateConstraint[0..*] constraintList;

}
