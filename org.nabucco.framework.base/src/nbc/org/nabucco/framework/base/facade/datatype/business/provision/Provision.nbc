/*
 * Copyright 2010 PRODYNA AG
 *
 * Licensed under the Eclipse Public License (EPL), Version 1.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.opensource.org/licenses/eclipse-1.0.php or
 * http://nabuccosource.org/License.html
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.nabucco.framework.base.facade.datatype.business.provision;

import org.nabucco.framework.base.facade.datatype.FunctionalIdentifier;
import org.nabucco.framework.base.facade.datatype.NabuccoDatatype;
import org.nabucco.framework.base.facade.datatype.Name;
import org.nabucco.framework.base.facade.datatype.Owner;
import org.nabucco.framework.base.facade.datatype.StatusType;
import org.nabucco.framework.base.facade.datatype.code.Code;
import org.nabucco.framework.base.facade.datatype.text.LongDescription;

@Author			Dominic Trumpfheller
@Company		PRODYNA AG
@Date			2010-11-30
@Version		1.0
@Description	A Provision in the Provision Component
public Datatype Provision extends NabuccoDatatype {

	@Description		The owner of the Provision.
	private Basetype Owner[1] owner;
	
	@Description		The name of the Provision.
	private Basetype Name[1] name;
	
	@Description		The description of the Provision.
	private Basetype LongDescription[0..1] description;
	
	@TechnicalProperty
	@Default			ACTIVE
	@Description		The status type of the Provision.
	private Enumeration StatusType[1] statusType;

	@Description		The functional Provision ID.
	private Basetype FunctionalIdentifier[0..1] functionalId;

	@Description		The functional Provision Type.
	@CodePath			nabucco.business.provision.functionaltype
	private Datatype Code[0..1] functionalType;

}